// Example project to show how to use Atrium in combination with mocha
// For more information on how to setup Atrium for a JS project -> https://github.com/robstoll/atrium#js

buildscript {
    ext {
        // for infix-api -> change to 'atrium-infix-en_GB-js'
        atrium_api = 'atrium-fluent-en_GB-js'
        atrium_version = '0.14.0.RC1'
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.github.node-gradle:gradle-node-plugin:2.2.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10'
    }
}

apply plugin: 'org.jetbrains.kotlin.js'
apply plugin: 'com.github.node-gradle.node'

group 'org.atriumlib.samples'
version '0.0.1'

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"

    // setup for Atrium:
    testImplementation("ch.tutteli.atrium:$atrium_api:$atrium_version")

    // setup for mocha:
    testImplementation "org.jetbrains.kotlin:kotlin-test-js"
}

// we only configure compileTestKotlinJs and not compileKotlinJs as well
// so that you can also use UMD as moduleKind for compileKotlinJs
compileTestKotlinJs.configure {
    // mocha requires commonjs
    kotlinOptions.moduleKind = "commonjs"
}

kotlin.target.nodejs { }

//either you use this task or create a testSetup.kt in your src/test with the following content
//
// // adopt to the api you use
// import ch.tutteli.atrium.fluent.en_GB.dependOnAtrium
//
// @Suppress("unused")
// private val establishDependencyToAtrium = dependOnAtrium()
task establishDependencyToAtrium(dependsOn: [compileTestKotlinJs]) {
    doLast {
        def srcFile = file("$buildDir/js/packages/${project.name}-test/kotlin/${project.name}-test.js")
        String newContent = srcFile.getText('UTF-8')
            .replace("(function (_, Kotlin,", "(function (_, Kotlin, \$module\$${atrium_api.replace('-', '_')},")
            .replace("(module.exports, require('kotlin'),", "(module.exports, require('kotlin'), require('$atrium_api'),")
        srcFile.write(newContent, 'UTF-8')
    }
}
task runMocha(type: NpxTask, group: 'Verification', dependsOn: [compileTestKotlinJs, establishDependencyToAtrium]) {
    command = "mocha"
    args = [compileTestKotlinJs.outputFile, '--full-trace']
}
check.dependsOn runMocha
nodeTest.dependsOn establishDependencyToAtrium
